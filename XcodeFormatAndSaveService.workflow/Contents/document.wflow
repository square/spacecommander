<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>428</string>
	<key>AMApplicationVersion</key>
	<string>2.7</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionNameComment</key>
				<string>XcodeFormatAndSave</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on get_active_window_name_with_extension()	try		tell application "Xcode"			set name_of_last_souce_document to (get name of front window)			return name_of_last_souce_document		end tell	on error documentNameError		tell application "Xcode"			set name_of_last_souce_document to name of last source document			return name_of_last_souce_document		end tell	end tryend get_active_window_name_with_extensionon has_suffix(a_string, a_suffix)	set string_length to length of a_string	set suffix_length to length of a_suffix		if string_length is less than suffix_length then return false		if string_length is 0 then		if suffix_length is 0 then			return true		else			return false		end if	end if		if suffix_length is 0 then return true		set end_of_string to characters (string_length - suffix_length + 1) through string_length of a_string as string		if end_of_string is a_suffix then return true		return falseend has_suffixon menu_click(menu_list)	local app_name, top_menu, rest_of_items		if menu_list's length &lt; 3 then error "Menu list is not long enough"		set {app_name, top_menu} to (items 1 through 2 of menu_list)	set rest_of_items to (items 3 through (menu_list's length) of menu_list)		tell application "System Events"		my menu_click_recurse(rest_of_items, ((process app_name)'s (menu bar 1)'s (menu bar item top_menu)'s (menu top_menu)))	end tellend menu_clickon menu_click_recurse(menu_list, parent_object)	local first_item, rest_of_items		set first_item to item 1 of menu_list	if menu_list's length &gt; 1 then set rest_of_items to (items 2 through (menu_list's length) of menu_list)		tell application "System Events"		if menu_list's length is 1 then			click parent_object's menu item first_item		else			my menu_click_recurse(rest_of_items, (parent_object's (menu item first_item)'s (menu first_item)))		end if	end tellend menu_click_recurseon path_for_active_project()	set targetFolder to ""	tell application "Xcode"		set project_path to my project_path_from_workspace_path(path of active workspace document)	end tellend path_for_active_projecton project_path_from_workspace_path(workspace_path)	set project_path to workspace_path	set proposed_project_path to workspace_path	set project_found to false	repeat while (project_found is false) and (proposed_project_path is not equal to "/")		set project_found to my has_suffix(proposed_project_path, ".xcodeproj") is true				if (project_found is true) then			set project_path to proposed_project_path		else			set proposed_project_path to do shell script "dirname " &amp; proposed_project_path		end if	end repeat		return project_pathend project_path_from_workspace_pathon xcode_save_current_document()	tell application "Xcode"		activate		my menu_click({"Xcode", "File", "Save"})		delay 0.25	end tellend xcode_save_current_documenttry	tell application "Xcode"		my xcode_save_current_document()		set active_window_name_with_extension to my get_active_window_name_with_extension()		if (active_window_name_with_extension contains ".h" or active_window_name_with_extension contains ".m") then			set active_window_name to do shell script "echo \"" &amp; active_window_name_with_extension &amp; "\"" &amp; " | cut -f1 -d\".\""			set documents_and_workspaces to every document						repeat with document_or_workspace in documents_and_workspaces				try					set name_of_document to name of document_or_workspace as Unicode text										if name_of_document starts with (active_window_name_with_extension as Unicode text) then						set current_active_document to document_or_workspace					end if				on error theError				end try			end repeat		end if				set current_active_document_path to path of current_active_document		set current_active_document_text to text of current_active_document as text	end tell		set project_root to do shell script "dirname " &amp; my path_for_active_project()	set storage_path to project_root &amp; "/Pods/SpaceCommander/.script_storage.txt"		set setup_not_complete_error to "Before formatting, please run: ./setup.sh"	try		set setup_complete_path to project_root &amp; "/Pods/SpaceCommander/.setup_complete.txt"		set setup_complete to do shell script "cat " &amp; setup_complete_path		if (setup_complete is not equal to "true") then			error setup_not_complete_error		end if	on error theError		error setup_not_complete_error	end try		do shell script "echo " &amp; quoted form of current_active_document_text &amp; " &gt; " &amp; storage_path		set format_script_path to project_root &amp; "/Pods/SpaceCommander/format-objc-file-dry-run.sh"	set full_space_commander_command to "cd " &amp; project_root &amp; " &amp;&amp; " &amp; format_script_path &amp; " " &amp; current_active_document_path	set formatted_source to do shell script full_space_commander_command	set text of current_active_document to formatted_source		my xcode_save_current_document()on error theError	display dialog theErrorend try</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>IgnoresInput</key>
				<true/>
				<key>InputUUID</key>
				<string>154CE90C-823A-49C8-9A74-D8CE1B641BAE</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>9EC7A124-B03D-471A-9438-BE11A4D7F90B</string>
				<key>ShowWhenRun</key>
				<false/>
				<key>UUID</key>
				<string>AA974E29-08D2-4934-9220-5E375B0D3CDC</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>309.000000:316.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>state</key>
	<dict>
		<key>AMLogTabViewSelectedIndex</key>
		<integer>1</integer>
		<key>libraryState</key>
		<dict>
			<key>actionsMajorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>269</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 424.000000, 713.000000, NO</string>
					<string>0.000000, 714.000000, 424.000000, 38.000000, NO</string>
				</array>
			</dict>
			<key>actionsMinorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 163.000000, 713.000000, NO</string>
					<string>164.000000, 0.000000, 260.000000, 713.000000, NO</string>
				</array>
			</dict>
			<key>variablesMajorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 424.000000, 555.000000, NO</string>
					<string>0.000000, 556.000000, 424.000000, 196.000000, NO</string>
				</array>
			</dict>
			<key>variablesMinorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 163.000000, 555.000000, NO</string>
					<string>164.000000, 0.000000, 260.000000, 555.000000, NO</string>
				</array>
			</dict>
		</dict>
		<key>majorSplitViewState</key>
		<dict>
			<key>expandedPosition</key>
			<real>476</real>
			<key>subviewState</key>
			<array>
				<string>0.000000, 0.000000, 424.000000, 797.000000, NO</string>
				<string>425.000000, 0.000000, 1016.000000, 797.000000, NO</string>
			</array>
		</dict>
		<key>minorSplitViewState</key>
		<dict>
			<key>expandedPosition</key>
			<real>150</real>
			<key>subviewState</key>
			<array>
				<string>0.000000, 0.000000, 1016.000000, 628.000000, NO</string>
				<string>0.000000, 638.000000, 1016.000000, 140.000000, NO</string>
			</array>
		</dict>
		<key>windowFrame</key>
		<string>{{0, 4}, {1440, 874}}</string>
		<key>workflowViewScrollPosition</key>
		<string>{{0, 0}, {1016, 628}}</string>
	</dict>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceApplicationBundleID</key>
		<string>com.apple.dt.Xcode</string>
		<key>serviceApplicationPath</key>
		<string>/Developer/Applications/Xcode.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
